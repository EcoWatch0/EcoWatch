generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Rôle global de l'utilisateur sur l'application
enum UserRole {
  ADMIN       // Droit total sur l'application
  OPERATOR    // Gestion des données météo
  USER        // Accès basique / consultation
}

/// Rôle spécifique au sein d'une organisation
enum OrgRole {
  MANAGER     // Responsable de l'organisation
  SUPERVISOR  // Supervisé(e) sur certaines tâches
  STAFF       // Employé(e) ou collaborateur(trice)
  CONSULTANT  // Conseiller(ère) externe
}

model User {
  id          String                      @id @default(cuid())
  email       String                      @unique
  password    String
  firstName   String
  lastName    String
  role        UserRole                    @default(USER)

  memberships OrganizationMembership[]
  createdAt   DateTime                    @default(now())
  updatedAt   DateTime                    @updatedAt
}

model Organization {
  id          String                      @id @default(uuid())
  name        String
  address     String?

  memberships OrganizationMembership[]
  createdAt   DateTime                    @default(now())
  updatedAt   DateTime                    @updatedAt
}

/// Table de jointure pour gérer les rôles d'un utilisateur dans une organisation
model OrganizationMembership {
  id             String       @id @default(cuid())
  user           User         @relation(fields: [userId], references: [id])
  
  userId         String
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String

  role           OrgRole      @default(STAFF)
  joinedAt       DateTime     @default(now())

  @@unique([userId, organizationId])
}