name: Docker Publish

on:
  push:
    branches: [main, develop, feature/*]
    tags: ['v*']
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'develop'
        type: choice
        options: [develop, main]
      version:
        description: 'Version tag (optional)'
        required: false
        type: string

env:
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - name: ecowatch-api
            context: .
            target: runner-api
            path: .
          - name: ecowatch-web
            context: .
            target: runner-web
            path: .
          - name: ecowatch-mqtt-influxdb-service
            context: .
            target: runner-mqtt-influxdb-service
            path: .
          - name: ecowatch-data-simulator
            context: .
            target: runner-data-simulator
            path: .
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: DÃ©finir ENV_TAG
        id: set-env
        run: |
          tag=$([[ "${{ github.event.inputs.environment }}" = "main" ]] && echo prod || echo pre-prod)
          echo "ENV_TAG=$tag" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (image ${{ matrix.image.name }})
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/code0ex/${{ matrix.image.name }}
          tags: |
            type=raw,value=${{ env.ENV_TAG }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ github.event.inputs.environment == 'main' }}

      - name: Build & push ${{ matrix.image.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.image.context }}
          target: ${{ matrix.image.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
