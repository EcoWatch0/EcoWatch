name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: ecowatch
          POSTGRES_PASSWORD: ecowatch_password
          POSTGRES_DB: ecowatch
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      influxdb:
        image: influxdb:2.7-alpine
        env:
          DOCKER_INFLUXDB_INIT_MODE: setup
          DOCKER_INFLUXDB_INIT_USERNAME: admin
          DOCKER_INFLUXDB_INIT_PASSWORD: ecowatch_password
          DOCKER_INFLUXDB_INIT_ORG: ecowatch
          DOCKER_INFLUXDB_INIT_BUCKET: ecowatch
          DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: your_token_here
        ports:
          - 8086:8086

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Build Backend
        run: pnpm --filter api-gateway build
        env:
          API_PORT: 3001
          FRONTEND_URL: http://localhost:3000
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: ecowatch
          POSTGRES_PASSWORD: ecowatch_password
          POSTGRES_DB: ecowatch
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          INFLUXDB_URL: http://localhost:8086
          INFLUXDB_TOKEN: your_token_here
          INFLUXDB_ORG: ecowatch
          INFLUXDB_BUCKET: ecowatch

      - name: Build Frontend
        run: pnpm --filter web build
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3001/api

      - name: Test Backend
        run: pnpm --filter api-gateway test
        env:
          API_PORT: 3001
          FRONTEND_URL: http://localhost:3000
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: ecowatch
          POSTGRES_PASSWORD: ecowatch_password
          POSTGRES_DB: ecowatch
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          INFLUXDB_URL: http://localhost:8086
          INFLUXDB_TOKEN: your_token_here
          INFLUXDB_ORG: ecowatch
          INFLUXDB_BUCKET: ecowatch

      - name: Test Frontend
        run: pnpm --filter web test
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3001/api 