version: '3.8'

services:
  api:
    build:
      context: .
      target: runner-api
    image: code0ex/ecowatch-api:latest
    ports:
      - "3001:3001"
    env_file:
      - .env
    networks:
      - ecowatch-network
    depends_on:
      - rabbitmq
      - influxdb
      - redis
      - db

  web:
    build:
      context: .
      target: runner-web
    image: code0ex/ecowatch-web:latest
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - api
    networks:
      - ecowatch-network

  db:
    image: postgres:16
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecowatch-network

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecowatch-network

  influxdb:
    image: influxdb:2.7-alpine
    ports:
      - "8086:8086"
    env_file:
      - .env
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - ecowatch-network

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: ecowatch-rabbitmq
    ports:
      - "1883:1883" # MQTT
      - "5672:5672" # AMQP
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    networks:
      - ecowatch-network

  data-simulator:
    build:
      context: .
      target: runner-data-simulator
    image: code0ex/ecowatch-data-simulator:latest
    env_file:
      - .env
    depends_on:
      - rabbitmq
    networks:
      - ecowatch-network
    restart: unless-stopped

  mqtt-influxdb-service:
    build:
      context: .
      target: runner-mqtt-influxdb-service
      dockerfile: Dockerfile
    image: code0ex/ecowatch-data-influxdb:latest
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - influxdb
    networks:
      - ecowatch-network
    restart: unless-stopped

networks:
  ecowatch-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  influxdb_data:
  mqtt_data:
  mqtt_log:
  rabbitmq_data:
